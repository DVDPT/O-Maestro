#pragma once

#define APP_FREQUENCY_PRESENT_THRESHOLD (40)
#define GOERTZEL_NR_OF_FREQUENCIES (76)
#define GOERTZEL_NR_OF_BLOCKS (5)
#define GOERTZEL_FREQUENCY_MAX_N (180)
#define GOERTZEL_QUEUE_MAX_BLOCKS (50*30)
#define GOERTZEL_MAX_NR_OF_MULTIPLE_FREQUENCIES_SIMULTANEOUS (20)
#define GOERTZEL_RELATIVE_POWER_MINIMUM_PERCENTAGE_THRESHOLD (10)
#define GOERTZEL_FILTERED_SAMPLES_POWER_MINIMUM_PERCENTAGE_THRESHOLD (4)

#define GOERTZEL_CONTROLLER_FS (8800)
#define GOERTZEL_CONTROLLER_SAMPLES_TYPE short
#define GOERTZEL_CONTROLLER_ENVIRONMENT_CHECK_TIME (10)
#define GOERTZEL_CONTROLLER_ENVIRONMENT_NUMBER_OF_FREQUENCY_BLOCKS_TO_CHECK ((GOERTZEL_CONTROLLER_ENVIRONMENT_CHECK_TIME * GOERTZEL_CONTROLLER_FS) / GOERTZEL_FREQUENCY_MAX_N)

//#define GOERTZEL_CONTROLLER_USER_DEFINED_BUFFER
#define GOERTZEL_CONTROLLER_BURST_MODE

#define GOERTZEL_POWER_TYPE unsigned int

#define GOERTZEL_CONTROLLER_BUFFER_SIZE (((GOERTZEL_FREQUENCY_MAX_N + (sizeof(GOERTZEL_POWER_TYPE)/sizeof(GOERTZEL_CONTROLLER_SAMPLES_TYPE))) * GOERTZEL_QUEUE_MAX_BLOCKS * sizeof(GOERTZEL_CONTROLLER_SAMPLES_TYPE)))

typedef GOERTZEL_CONTROLLER_SAMPLES_TYPE GoertzelSampleType;
typedef GOERTZEL_POWER_TYPE GoertzelPowerType;
